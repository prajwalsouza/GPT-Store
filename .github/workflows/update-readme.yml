name: Update README

on:
  push:
    paths:
      - 'gpts/**'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find new or modified file
        id: findfile
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            # There is a previous commit, so find the most recently modified file
            NEW_FILE=$(git diff --name-only HEAD^ HEAD | grep '^gpts/' | xargs -r ls -t | head -n 1)
          else
            # No previous commit, so find the most recently created file in 'gpts/'
            NEW_FILE=$(ls -t gpts/ | head -n 1)
          fi
          echo "New or modified file found: $NEW_FILE"
          if [[ ! -z "$NEW_FILE" ]]; then
            echo "::set-output name=new_file::gpts/$NEW_FILE"
          fi
      - name: Print new file content (for debugging)
        if: steps.findfile.outputs.new_file
        run: |
          NEW_FILE="${{ steps.findfile.outputs.new_file }}"
          echo "Contents of $NEW_FILE:"
          cat "$NEW_FILE"
      - name: Update README
        if: steps.findfile.outputs.new_file
        run: |
          NEW_FILE="${{ steps.findfile.outputs.new_file }}"
          CONTENT=$(cat "$NEW_FILE")
          printf "\n - $CONTENT" >> README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with new content"
          git push
