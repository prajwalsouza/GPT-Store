name: Update README

on:
  push:
    paths:
      - 'gpts/**'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Find the most recently committed file in the gpts directory
        id: findfile
        run: |
          # Get the log of commits affecting files in the 'gpts/' directory
          # Limit to recent commits for efficiency
          COMMIT_LOG=$(git log -n 10 --pretty=format:%H -- 'gpts/')

          # Iterate over the commits to find the most recent file change
          for COMMIT_HASH in $COMMIT_LOG
          do
            # Get the file(s) affected in this commit
            FILES_IN_COMMIT=$(git diff-tree --no-commit-id --name-only -r $COMMIT_HASH | grep '^gpts/')
            if [[ ! -z "$FILES_IN_COMMIT" ]]; then
              # If files were affected in this commit, break and use the latest one
              break
            fi
          done

          NEW_FILE=$(echo "$FILES_IN_COMMIT" | head -n 1)
          echo "Most recently committed file in 'gpts/': $NEW_FILE"

          if [[ ! -z "$NEW_FILE" ]]; then
            echo "NEW_FILE=$NEW_FILE" >> $GITHUB_ENV
          fi

      - name: Print new file content (for debugging)
        if: env.NEW_FILE
        run: |
          NEW_FILE=${{ env.NEW_FILE }}
          echo "Contents of $NEW_FILE:"
          cat "$NEW_FILE"

      - name: Update README
        if: env.NEW_FILE
        run: |
          NEW_FILE=${{ env.NEW_FILE }}
          CONTENT=$(cat "$NEW_FILE")
          printf "\n\n - $CONTENT" >> README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with new content from $NEW_FILE"
          git push
